openapi: 3.1.0
info:
  title: Teams Management API
  version: 3.2.1
  description: API for managing teams, members, and managers.

servers:
  - url: /teams

paths:
  /:
    get:
      summary: Retrieve all teams
      description: Retrieve a list of all teams in the system, including their members and team manager.
      parameters:
        - name: onlyMature
          in: query
          description: If true, only mature teams will be returned.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'

    post:
      summary: Create a new team
      description: Create a new team with the specified details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamCommand'
            example:
              Name: Development Team
              MembersId:
                - "123e4567-e89b-12d3-a456-426614174000"
                - "123e4567-e89b-12d3-a456-426614174001"
              TeamManagerId: "123e4567-e89b-12d3-a456-426614174002"
      responses:
        '201':
          description: Team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDto'
        '400':
          description: Bad request

  /{teamId}:
    get:
      summary: Retrieve a team by ID
      parameters:
        - name: teamId
          in: path
          description: The unique identifier of the team
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetailsDto'
        '404':
          description: Team not found

    put:
      summary: Update a team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamCommand'
      responses:
        '200':
          description: Team updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDto'
        '400':
          description: Bad request
        '404':
          description: Team not found

    delete:
      summary: Delete a team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier of the team
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Team deleted
        '404':
          description: Team not found

  /stats:
    get:
      summary: Retrieve team statistics
      parameters:
        - name: teamId
          in: query
          description: The unique identifier of the team
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Team statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamStatsDto'
        '404':
          description: Team not found

  /manager:
    get:
      summary: Retrieve teams by manager
      parameters:
        - name: managerId
          in: query
          description: Manager unique identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: includeMembers
          in: query
          description: Include team members in the response
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of teams managed by the manager
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'
        '404':
          description: No teams found

    patch:
      summary: Change team manager
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamManagerCommand'
            example:
              Name: Pentester
              OldTeamManagerId: "b14db1e2-026e-4ac9-9739-378720de6f5b"
              NewTeamManagerId: "9a57d8f7-56f4-47d9-a429-5f4f34e9bc83"
              ContratType: Stagiaire
      responses:
        '204':
          description: Team manager updated
        '400':
          description: Validation errors
        '404':
          description: Team not found
        '500':
          description: Internal server error

  /member:
    get:
      summary: Retrieve teams by member
      parameters:
        - name: memberId
          in: query
          description: Member unique identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: includeMembers
          in: query
          description: Include team members in the response
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'
        '404':
          description: No teams found

    patch:
      summary: Add a team member
      parameters:
        - name: memberId
          in: query
          description: Member unique identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Member added
        '400':
          description: Invalid memberId
        '404':
          description: Member not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a team member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTeamMemberDto'
            example:
              MemberId: "123e4567-e89b-12d3-a456-426614174000"
              TeamName: Development Team
      responses:
        '204':
          description: Member removed
        '400':
          description: Bad request
        '404':
          description: Member not found

components:
  schemas:
    TeamDto:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          type: string
        Members:
          type: array
          items:
            type: string
            format: uuid
        TeamManagerId:
          type: string
          format: uuid

    TeamDetailsDto:
      allOf:
        - $ref: '#/components/schemas/TeamDto'
        - type: object
          properties:
            CreatedAt:
              type: string
              format: date-time
            UpdatedAt:
              type: string
              format: date-time

    TeamStatsDto:
      type: object
      properties:
        TeamId:
          type: string
          format: uuid
        TotalMembers:
          type: integer
        ActiveProjects:
          type: integer

    CreateTeamCommand:
      type: object
      required:
        - Name
        - TeamManagerId
      properties:
        Name:
          type: string
        MembersId:
          type: array
          items:
            type: string
            format: uuid
        TeamManagerId:
          type: string
          format: uuid

    UpdateTeamCommand:
      type: object
      required:
        - Id
        - Name
        - TeamManagerId
      properties:
        Id:
          type: string
          format: uuid
        Name:
          type: string
        MemberId:
          type: array
          items:
            type: string
            format: uuid
        TeamManagerId:
          type: string
          format: uuid

    UpdateTeamManagerCommand:
      type: object
      required:
        - Name
        - OldTeamManagerId
        - NewTeamManagerId
      properties:
        Name:
          type: string
        OldTeamManagerId:
          type: string
          format: uuid
        NewTeamManagerId:
          type: string
          format: uuid
        ContratType
