openapi: 3.0.1
info:
  title: Teams API
  description: API pour la gestion des équipes
  version: "1.0.0"
paths:
  /teams:
    get:
      summary: Récupère toutes les équipes
      parameters:
        - name: onlyMature
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Liste des équipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'
    post:
      summary: Crée une nouvelle équipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamCommand'
      responses:
        '201':
          description: Équipe créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDto'
        '400':
          description: Requête invalide
  /teams/{teamId}:
    get:
      summary: Récupère une équipe par son ID unique
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Détails de l'équipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetailsDto'
        '404':
          description: Équipe non trouvée
    put:
      summary: Met à jour une équipe
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamCommand'
      responses:
        '200':
          description: Équipe mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDto'
        '400':
          description: ID de l'équipe non valide ou données incorrectes
        '404':
          description: Équipe non trouvée
  /teams/manager:
    get:
      summary: Récupère les équipes gérées par un manager
      parameters:
        - name: managerId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: includeMembers
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Liste des équipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'
        '404':
          description: Aucune équipe trouvée pour ce manager
    patch:
      summary: Change le manager d’une équipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamManagerCommand'
      responses:
        '204':
          description: Manager changé avec succès
        '400':
          description: Requête invalide
        '404':
          description: Équipe ou manager non trouvé
        '500':
          description: Erreur serveur
  /teams/stats:
    get:
      summary: Récupère les statistiques d'une équipe
      parameters:
        - name: teamId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Statistiques de l'équipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamStatsDto'
        '404':
          description: Équipe non trouvée
  /teams/member:
    get:
      summary: Récupère toutes les équipes auxquelles un membre appartient
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: includeMembers
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Liste des équipes auxquelles le membre appartient
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDto'
        '404':
          description: Aucune équipe trouvée pour ce membre
    patch:
      summary: Ajoute un membre à une équipe
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Membre ajouté à l’équipe
        '400':
          description: Requête invalide
        '404':
          description: Membre ou équipe non trouvée
        '500':
          description: Erreur serveur
    delete:
      summary: Supprime un membre d'une équipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTeamMemberDto'
      responses:
        '204':
          description: Membre supprimé avec succès
        '400':
          description: Requête invalide
        '404':
          description: Membre non trouvé dans l’équipe
  /teams/{teamId}/member:
    delete:
      summary: Supprime un membre d’une équipe
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: memberId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Membre supprimé de l’équipe
        '404':
          description: Membre ou équipe non trouvée
  /teams/{teamId}/manager:
    patch:
      summary: Change le manager d’une équipe
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamManagerCommand'
      responses:
        '204':
          description: Manager changé avec succès
        '400':
          description: Requête invalide
        '404':
          description: Équipe non trouvée
        '500':
          description: Erreur serveur

components:
  schemas:
    TeamDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        members:
          type: array
          items:
            type: string
            format: uuid
        managerId:
          type: string
          format: uuid
    TeamDetailsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        members:
          type: array
          items:
            type: string
            format: uuid
        managerId:
          type: string
          format: uuid
        projects:
          type: array
          items:
            type: string
    TeamStatsDto:
      type: object
      properties:
        totalMembers:
          type: integer
        activeProjects:
          type: integer
    CreateTeamCommand:
      type: object
      properties:
        name:
          type: string
        membersId:
          type: array
          items:
            type: string
            format: uuid
        teamManagerId:
          type: string
          format: uuid
    UpdateTeamCommand:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        memberId:
          type: array
          items:
            type: string
            format: uuid
        teamManagerId:
          type: string
          format: uuid
    UpdateTeamManagerCommand:
      type: object
      properties:
        name:
          type: string
        oldTeamManagerId:
          type: string
          format: uuid
        newTeamManagerId:
          type: string
          format: uuid
        contractType:
          type: string
    DeleteTeamMemberDto:
      type: object
      properties:
        memberId:
          type: string
          format: uuid
        teamName:
          type: string
